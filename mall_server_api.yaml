openapi: 3.0.3
info:
  title: Mall Server API Design
  description: first draft of mall server API design
  version: 1.0.0
paths:
  /order/create:
    post:
      summary: create a new order in the database
      requestBody: 
        content:
          application/json:
            schema:
              type: object
              properties:
                storeId:
                  type: string
                  description: id of store or person dispatching the order
                  example: store1
                recipientId:
                  type: string
                  description: id of customer
                  example: recipient1
                location:
                  type: integer
                  description: postal code of store 
                  example: 486038
                deliveryAddress:
                  type: integer
                  description: postal code of delivery address
                  example: 487372
                itemDescription:
                  type: string
                  example: random parcel from ccp
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    example: 3123
                  storeId:
                    type: string
                    description: id of store or person dispatching the order
                    example: store1
                  recipientId:
                    type: string
                    description: id of customer
                    example: recipient1
                  location:
                    type: integer
                    description: postal code of store 
                    example: 486038
                  deliveryAddress:
                    type: integer
                    description: postal code of delivery address
                    example: 487372
                  itemDescription:
                    type: string
                    example: random parcel from ccp
                  deliveryTime:
                    type: integer
                    example: 12
  /order/{id}:
    description: notify, cancel and update mall server about delivery order
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    delete:
      summary: delete order by id
      responses:
        200:
          description: success resonponse
        
  /order/{id}/status:
    description: notify, cancel and update mall server about delivery order
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: get order status from the database
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - order received
                      - robot dispatched
                      - on the way
                      - at hub
                      - delivered
                      - cancelled
                      - failed
    patch:
      summary: update the order status by order id to database
      requestBody: 
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - order received
                    - robot dispatched
                    - on the way
                    - at hub
                    - delivered
                    - cancelled
                    - failed
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - order received
                      - robot dispatched
                      - on the way
                      - at hub
                      - delivered
                      - cancelled
                      - failed
  /order/{id}/robotId:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: get robot id from the database
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  robotId: 
                    type: integer
                    description: robot assigned for delivery
                    example: 1234
    patch:
      summary: update the robot id by order id to database
      requestBody: 
        content:
          application/json:
            schema:
              type: object
              properties:
                robotId: 
                  type: integer
                  description: robot assigned for delivery
                  example: 1234
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  robotId: 
                    type: integer
                    description: robot assigned for delivery
                    example: 1234
  /rmf/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    post:
      summary: notifying rmf instance of an order, need to get back robotId
      requestBody: 
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: integer
                  description: postal code of store 
                  example: 486038
                deliveryAddress:
                  type: integer
                  description: postal code of delivery address
                  example: 487372
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    example: 3123
                  robotId:
                    type: integer
                    example: 1234
                  status:
                    type: string
                    enum:
                      - order received
                      - robot dispatched
                      - on the way
                      - at hub
                      - delivered
                      - cancelled
                      - failed
